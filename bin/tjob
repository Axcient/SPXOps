#!/usr/bin/php
<?php
  /**
   * scheck
   *
   * @author Gouverneur Thomas <tgo@espix.net>
   * @copyright Copyright (c) 2012-2015, Gouverneur Thomas
   * @version 1.0
   * @package CLI
   * @category utils
   * @subpackage list
   * @license https://raw.githubusercontent.com/tgouverneur/SPXOps/master/LICENSE.md Revised BSD License
   * @filesource
   */
  require_once dirname(__FILE__).'/../libs/utils.obj.php';


  $shortopts = "f::c::hv";
  $opts = getopt($shortopts);

  if (isset($opts['h']) || count($argv) < 2) {
      echo $argv[0]."\n";
      echo "\t [-f=<name>]\n";
      echo "\t [-c=<class>]\n";
      echo "\t [-h] this help\n";
      echo "\t [-v] Verbose\n";
      exit();
  }
  $cname = $fname = '';

  if (isset($opts['v'])) {
      Logger::logLevel(LLOG_DEBUG);
  }

  if (isset($opts['c']) && !empty($opts['c'])) {
      $cname = $opts['c'];
  } else {
      echo "[!] You must provide function class (check -h for syntax)\n";
      exit(1);
  }
  if (isset($opts['f']) && !empty($opts['f'])) {
      $fname = $opts['f'];
  } else {
      echo "[!] You must provide function name (check -h for syntax)\n";
      exit(1);
  }

  $m = MySqlCM::getInstance();
  if ($m->connect()) {
      die($argv[0]." Error with SQL db: ".$m->getError()."\n");
  }

  $c = $cname;
  $f = $fname;
  $j = new Job();
  $j->o_log = null;
  try {
      $ret = $c::$f($j, null);
  } catch (Exception $e) {
      echo '[!] Error: '.$e;
      $ret = -1;
  }   
  return $ret;

?>
