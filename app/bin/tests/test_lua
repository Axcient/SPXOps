#!/usr/bin/php
<?php
  /**
   * @author Gouverneur Thomas <tgo@espix.net>
   * @copyright Copyright (c) 2016, Gouverneur Thomas
   * @version 1.0
   * @package CLI
   * @category utils
   * @subpackage list
   * @filesource
   * @license https://raw.githubusercontent.com/tgouverneur/SPXOps/master/LICENSE.md Revised BSD License
   */
  require_once dirname(__FILE__).'/../../libs/utils.obj.php';
  error_reporting(E_ALL);

  $m = MySqlCM::getInstance();
  if ($m->connect()) {
    die($argv[0]." Error with SQL db: ".$m->getError()."\n");
  }
  function testArray() {
      $ret = array(null, 'plop', 'pliz', 'pluz');
      unset($ret[0]);
      return $ret;
  }
  function testException($e) {
      if ($e) {
          return true;
      }
      return false;
  }

  $lua = new Lua();
  $lua->registerCallback('test', 'testException');
  $lua->registerCallback('testArray', 'testArray');

  echo $lua->eval(<<<CODE
  if test(0) == true then
    print('First call is true');
  else
    print('First call is false');
  end
  print '\\n';
  if test(1) == true then
    print('Second call is true');
  else
    print('Second call is false');
  end
  print '\\n';
CODE
  );

  echo $lua->eval(<<<CODE
    ret = testArray();
    print(ret);
    for i, v in ipairs(ret) do
        print (v..'\\n');
    end
CODE
  );

?>
